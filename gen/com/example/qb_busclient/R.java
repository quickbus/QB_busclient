/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.example.qb_busclient;

public final class R {
    public static final class attr {
        /**  We need a mask drawable to mask the background, then draw the track 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int backgroundMask=0x7f010012;
        /**  drawablw to use when the switch is in the unchecked/"off" state. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int drawableOff=0x7f010005;
        /**  drawablw to use when the switch is in the checked/"on" state. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int drawableOn=0x7f010004;
        /**  the track drawable will be drawn on top of these background. So if
             these back grounds were to be visible, the track has to have transparency 
 The background when left side of the switch is visible 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int leftBackground=0x7f010010;
        /**  Default style for the Switch widget. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int mySwitchStyleAttr=0x7f01001a;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> the switch moves only on the x-axis(horizontally) </td></tr>
<tr><td><code>vertical</code></td><td>0</td><td> the switch moves only on the y-axis(vertically) </td></tr>
</table>
         */
        public static final int orientation=0x7f01000f;
        /**  if the switch should operate like iOS UISwitch 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int pushStyle=0x7f010006;
        /**  The background when right side of the switch is visible 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int rightBackground=0x7f010011;
        /**  Minimum height for the switch component 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchMinHeight=0x7f01000d;
        /**  Minimum width for the switch component 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchMinWidth=0x7f01000c;
        /**  Minimum space between the switch and caption text 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchPadding=0x7f01000e;
        /**  TextAppearance style for text displayed on the switch thumb. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int switchTextAppearanceAttrib=0x7f01000b;
        /**  Text color. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textColor=0x7f010013;
        /**  Color of the text selection highlight. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textColorHighlight=0x7f010017;
        /**  Color of the hint text. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textColorHint=0x7f010018;
        /**  Color of the links. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textColorLink=0x7f010019;
        /**  Text to use when the switch is in the unchecked/"off" state. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         */
        public static final int textOff=0x7f010003;
        /**  Text to use when the switch is in the checked/"on" state. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         */
        public static final int textOn=0x7f010002;
        /**  if text should be drawn on the Thumb or On the track. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textOnThumb=0x7f010007;
        /**  Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textSize=0x7f010014;
        /**  Style (bold, italic, bolditalic) for the text. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
         */
        public static final int textStyle=0x7f010015;
        /**  Drawable to use as the "thumb" that switches back and forth. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int thumb=0x7f010000;
        /**  if the thumb should be allowed to move more beyond the switch boundaries 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thumbExtraMovement=0x7f010008;
        /**  Amount of padding on either side of text within the switch thumb. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thumbTextPadding=0x7f010009;
        /**  Drawable to use as the "track" that the switch thumb slides within. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int track=0x7f010001;
        /**  Amount of padding on either side of text within the switch track. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int trackTextPadding=0x7f01000a;
        /**  Typeface (normal, sans, serif, monospace) for the text. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>sans</code></td><td>1</td><td></td></tr>
<tr><td><code>serif</code></td><td>2</td><td></td></tr>
<tr><td><code>monospace</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int typeface=0x7f010016;
    }
    public static final class dimen {
        /**  Default screen margins, per the Android Design guidelines. 

         Example customization of dimensions originally defined in res/values/dimens.xml
         (such as screen margins) for screens with more than 820dp of available width. This
         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively).
    
         */
        public static final int activity_horizontal_margin=0x7f050000;
        public static final int activity_vertical_margin=0x7f050001;
    }
    public static final class drawable {
        public static final int arrow_button64x49=0x7f020000;
        public static final int arrow_button72x72=0x7f020001;
        public static final int background5=0x7f020002;
        public static final int background_fenced=0x7f020003;
        public static final int background_raised=0x7f020004;
        public static final int gold1=0x7f020005;
        public static final int gps_background=0x7f020006;
        public static final int green_drawable=0x7f020036;
        public static final int ic_add=0x7f020007;
        public static final int ic_launcher=0x7f020008;
        public static final int ic_reg=0x7f020009;
        public static final int main_background=0x7f02000a;
        public static final int main_background_o=0x7f02000b;
        public static final int main_bakground=0x7f02000c;
        public static final int main_bakground_o=0x7f02000d;
        public static final int main_ground=0x7f02000e;
        public static final int main_ground_o=0x7f02000f;
        public static final int pre_loading=0x7f020010;
        public static final int qb_busclient=0x7f020011;
        public static final int red_drawable=0x7f020035;
        public static final int rgroove_copy=0x7f020012;
        public static final int rgroove_copy_vert=0x7f020013;
        public static final int rgroove_mask=0x7f020014;
        public static final int rgroove_mask_vert=0x7f020015;
        public static final int rswitch_button_small=0x7f020016;
        public static final int sgroove_copy=0x7f020017;
        public static final int sgroove_copy_sm=0x7f020018;
        public static final int sgroove_copy_sm2=0x7f020019;
        public static final int sgroove_copy_sml=0x7f02001a;
        public static final int sgroove_copy_vert=0x7f02001b;
        public static final int sleft_background_copy=0x7f02001c;
        public static final int sleft_background_copy1=0x7f02001d;
        public static final int sleft_background_copy1_vert=0x7f02001e;
        public static final int sleft_background_copy_sm=0x7f02001f;
        public static final int smask_background_copy=0x7f020020;
        public static final int smask_background_copy_sm=0x7f020021;
        public static final int smask_background_copy_vert=0x7f020022;
        public static final int sright_background_copy=0x7f020023;
        public static final int sright_background_copy1=0x7f020024;
        public static final int sright_background_copy1_vert=0x7f020025;
        public static final int sright_background_copy_sm=0x7f020026;
        public static final int stoggle_copy=0x7f020027;
        public static final int stoggle_copy1=0x7f020028;
        public static final int stoggle_copy2=0x7f020029;
        public static final int stoggle_copy_sm=0x7f02002a;
        public static final int switch_thumb=0x7f02002b;
        public static final int switch_thumb32x32=0x7f02002c;
        public static final int switch_thumb_arrow=0x7f02002d;
        public static final int switch_track=0x7f02002e;
        public static final int switch_track_green=0x7f02002f;
        public static final int vswitch_off_drawable=0x7f020030;
        public static final int vswitch_on_drawable=0x7f020031;
        public static final int vswitch_thumb=0x7f020032;
        public static final int vswitch_trac1k=0x7f020033;
        public static final int vswitch_track=0x7f020034;
    }
    public static final class id {
        public static final int accident_btn=0x7f040023;
        public static final int action_settings=0x7f040028;
        public static final int bold=0x7f040003;
        public static final int button1=0x7f04001b;
        public static final int button2=0x7f04001c;
        public static final int editText1=0x7f040019;
        public static final int editText2=0x7f04001a;
        public static final int emergency_btn=0x7f040022;
        public static final int emergency_select=0x7f040021;
        public static final int horizontal=0x7f040000;
        public static final int imageButton1=0x7f04001e;
        public static final int italic=0x7f040004;
        public static final int listView1=0x7f04001f;
        public static final int message=0x7f040027;
        public static final int monospace=0x7f040007;
        public static final int normal=0x7f040002;
        public static final int pic=0x7f040025;
        public static final int pickup2=0x7f04000c;
        public static final int police_btn=0x7f040024;
        public static final int progressBar1=0x7f04001d;
        public static final int route_select=0x7f040020;
        public static final int sans=0x7f040005;
        public static final int serif=0x7f040006;
        public static final int textView0=0x7f040008;
        public static final int textView1=0x7f040009;
        public static final int textView10=0x7f040013;
        public static final int textView11=0x7f040014;
        public static final int textView12=0x7f040015;
        public static final int textView13=0x7f040016;
        public static final int textView14=0x7f040017;
        public static final int textView15=0x7f040018;
        public static final int textView2=0x7f04000a;
        public static final int textView3=0x7f04000b;
        public static final int textView4=0x7f04000d;
        public static final int textView5=0x7f04000e;
        public static final int textView6=0x7f04000f;
        public static final int textView7=0x7f040010;
        public static final int textView8=0x7f040011;
        public static final int textView9=0x7f040012;
        public static final int title=0x7f040026;
        public static final int vertical=0x7f040001;
    }
    public static final class layout {
        public static final int activity_gps=0x7f030000;
        public static final int activity_main=0x7f030001;
        public static final int activity_route=0x7f030002;
        public static final int tabactivity_funcselect=0x7f030003;
        public static final int yanklst=0x7f030004;
    }
    public static final class menu {
        public static final int gps=0x7f080000;
        public static final int main=0x7f080001;
        public static final int preloading=0x7f080002;
        public static final int route=0x7f080003;
    }
    public static final class string {
        public static final int action_settings=0x7f060001;
        public static final int app_name=0x7f060000;
        public static final int hello=0x7f060007;
        public static final int hello_world=0x7f060002;
        public static final int large_text=0x7f060004;
        public static final int route=0x7f060005;
        public static final int title_activity_gps=0x7f060006;
        public static final int title_activity_route=0x7f060003;
    }
    public static final class style {
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        
         */
        public static final int AppBaseTheme=0x7f070000;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f070001;
        public static final int Emergency_Select_TextView=0x7f070006;
        public static final int PreLoading=0x7f070005;
        public static final int SwitchText=0x7f070002;
        public static final int mySwitchStyle=0x7f070003;
        public static final int mySwitchTextAppearance=0x7f070004;
    }
    public static final class styleable {
        /** Attributes that can be used with a MySwitch.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MySwitch_backgroundMask com.example.qb_busclient:backgroundMask}</code></td><td> We need a mask drawable to mask the background, then draw the track </td></tr>
           <tr><td><code>{@link #MySwitch_drawableOff com.example.qb_busclient:drawableOff}</code></td><td> drawablw to use when the switch is in the unchecked/"off" state.</td></tr>
           <tr><td><code>{@link #MySwitch_drawableOn com.example.qb_busclient:drawableOn}</code></td><td> drawablw to use when the switch is in the checked/"on" state.</td></tr>
           <tr><td><code>{@link #MySwitch_leftBackground com.example.qb_busclient:leftBackground}</code></td><td> the track drawable will be drawn on top of these background.</td></tr>
           <tr><td><code>{@link #MySwitch_orientation com.example.qb_busclient:orientation}</code></td><td></td></tr>
           <tr><td><code>{@link #MySwitch_pushStyle com.example.qb_busclient:pushStyle}</code></td><td> if the switch should operate like iOS UISwitch </td></tr>
           <tr><td><code>{@link #MySwitch_rightBackground com.example.qb_busclient:rightBackground}</code></td><td> The background when right side of the switch is visible </td></tr>
           <tr><td><code>{@link #MySwitch_switchMinHeight com.example.qb_busclient:switchMinHeight}</code></td><td> Minimum height for the switch component </td></tr>
           <tr><td><code>{@link #MySwitch_switchMinWidth com.example.qb_busclient:switchMinWidth}</code></td><td> Minimum width for the switch component </td></tr>
           <tr><td><code>{@link #MySwitch_switchPadding com.example.qb_busclient:switchPadding}</code></td><td> Minimum space between the switch and caption text </td></tr>
           <tr><td><code>{@link #MySwitch_switchTextAppearanceAttrib com.example.qb_busclient:switchTextAppearanceAttrib}</code></td><td> TextAppearance style for text displayed on the switch thumb.</td></tr>
           <tr><td><code>{@link #MySwitch_textOff com.example.qb_busclient:textOff}</code></td><td> Text to use when the switch is in the unchecked/"off" state.</td></tr>
           <tr><td><code>{@link #MySwitch_textOn com.example.qb_busclient:textOn}</code></td><td> Text to use when the switch is in the checked/"on" state.</td></tr>
           <tr><td><code>{@link #MySwitch_textOnThumb com.example.qb_busclient:textOnThumb}</code></td><td> if text should be drawn on the Thumb or On the track.</td></tr>
           <tr><td><code>{@link #MySwitch_thumb com.example.qb_busclient:thumb}</code></td><td> Drawable to use as the "thumb" that switches back and forth.</td></tr>
           <tr><td><code>{@link #MySwitch_thumbExtraMovement com.example.qb_busclient:thumbExtraMovement}</code></td><td> if the thumb should be allowed to move more beyond the switch boundaries </td></tr>
           <tr><td><code>{@link #MySwitch_thumbTextPadding com.example.qb_busclient:thumbTextPadding}</code></td><td> Amount of padding on either side of text within the switch thumb.</td></tr>
           <tr><td><code>{@link #MySwitch_track com.example.qb_busclient:track}</code></td><td> Drawable to use as the "track" that the switch thumb slides within.</td></tr>
           <tr><td><code>{@link #MySwitch_trackTextPadding com.example.qb_busclient:trackTextPadding}</code></td><td> Amount of padding on either side of text within the switch track.</td></tr>
           </table>
           @see #MySwitch_backgroundMask
           @see #MySwitch_drawableOff
           @see #MySwitch_drawableOn
           @see #MySwitch_leftBackground
           @see #MySwitch_orientation
           @see #MySwitch_pushStyle
           @see #MySwitch_rightBackground
           @see #MySwitch_switchMinHeight
           @see #MySwitch_switchMinWidth
           @see #MySwitch_switchPadding
           @see #MySwitch_switchTextAppearanceAttrib
           @see #MySwitch_textOff
           @see #MySwitch_textOn
           @see #MySwitch_textOnThumb
           @see #MySwitch_thumb
           @see #MySwitch_thumbExtraMovement
           @see #MySwitch_thumbTextPadding
           @see #MySwitch_track
           @see #MySwitch_trackTextPadding
         */
        public static final int[] MySwitch = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b,
            0x7f01000c, 0x7f01000d, 0x7f01000e, 0x7f01000f,
            0x7f010010, 0x7f010011, 0x7f010012
        };
        /**
          <p>
          @attr description
           We need a mask drawable to mask the background, then draw the track 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:backgroundMask
        */
        public static final int MySwitch_backgroundMask = 18;
        /**
          <p>
          @attr description
           drawablw to use when the switch is in the unchecked/"off" state. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:drawableOff
        */
        public static final int MySwitch_drawableOff = 5;
        /**
          <p>
          @attr description
           drawablw to use when the switch is in the checked/"on" state. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:drawableOn
        */
        public static final int MySwitch_drawableOn = 4;
        /**
          <p>
          @attr description
           the track drawable will be drawn on top of these background. So if
             these back grounds were to be visible, the track has to have transparency 
 The background when left side of the switch is visible 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:leftBackground
        */
        public static final int MySwitch_leftBackground = 16;
        /**
          <p>This symbol is the offset where the {@link com.example.qb_busclient.R.attr#orientation}
          attribute's value can be found in the {@link #MySwitch} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> the switch moves only on the x-axis(horizontally) </td></tr>
<tr><td><code>vertical</code></td><td>0</td><td> the switch moves only on the y-axis(vertically) </td></tr>
</table>
          @attr name com.example.qb_busclient:orientation
        */
        public static final int MySwitch_orientation = 15;
        /**
          <p>
          @attr description
           if the switch should operate like iOS UISwitch 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:pushStyle
        */
        public static final int MySwitch_pushStyle = 6;
        /**
          <p>
          @attr description
           The background when right side of the switch is visible 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:rightBackground
        */
        public static final int MySwitch_rightBackground = 17;
        /**
          <p>
          @attr description
           Minimum height for the switch component 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:switchMinHeight
        */
        public static final int MySwitch_switchMinHeight = 13;
        /**
          <p>
          @attr description
           Minimum width for the switch component 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:switchMinWidth
        */
        public static final int MySwitch_switchMinWidth = 12;
        /**
          <p>
          @attr description
           Minimum space between the switch and caption text 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:switchPadding
        */
        public static final int MySwitch_switchPadding = 14;
        /**
          <p>
          @attr description
           TextAppearance style for text displayed on the switch thumb. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:switchTextAppearanceAttrib
        */
        public static final int MySwitch_switchTextAppearanceAttrib = 11;
        /**
          <p>
          @attr description
           Text to use when the switch is in the unchecked/"off" state. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:textOff
        */
        public static final int MySwitch_textOff = 3;
        /**
          <p>
          @attr description
           Text to use when the switch is in the checked/"on" state. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:textOn
        */
        public static final int MySwitch_textOn = 2;
        /**
          <p>
          @attr description
           if text should be drawn on the Thumb or On the track. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:textOnThumb
        */
        public static final int MySwitch_textOnThumb = 7;
        /**
          <p>
          @attr description
           Drawable to use as the "thumb" that switches back and forth. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:thumb
        */
        public static final int MySwitch_thumb = 0;
        /**
          <p>
          @attr description
           if the thumb should be allowed to move more beyond the switch boundaries 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:thumbExtraMovement
        */
        public static final int MySwitch_thumbExtraMovement = 8;
        /**
          <p>
          @attr description
           Amount of padding on either side of text within the switch thumb. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:thumbTextPadding
        */
        public static final int MySwitch_thumbTextPadding = 9;
        /**
          <p>
          @attr description
           Drawable to use as the "track" that the switch thumb slides within. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:track
        */
        public static final int MySwitch_track = 1;
        /**
          <p>
          @attr description
           Amount of padding on either side of text within the switch track. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:trackTextPadding
        */
        public static final int MySwitch_trackTextPadding = 10;
        /**  Present the text in ALL CAPS. This may use a small-caps form when available. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textColor com.example.qb_busclient:textColor}</code></td><td> Text color.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textColorHighlight com.example.qb_busclient:textColorHighlight}</code></td><td> Color of the text selection highlight.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textColorHint com.example.qb_busclient:textColorHint}</code></td><td> Color of the hint text.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textColorLink com.example.qb_busclient:textColorLink}</code></td><td> Color of the links.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textSize com.example.qb_busclient:textSize}</code></td><td> Size of the text.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textStyle com.example.qb_busclient:textStyle}</code></td><td> Style (bold, italic, bolditalic) for the text.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_typeface com.example.qb_busclient:typeface}</code></td><td> Typeface (normal, sans, serif, monospace) for the text.</td></tr>
           </table>
           @see #mySwitchTextAppearanceAttrib_textColor
           @see #mySwitchTextAppearanceAttrib_textColorHighlight
           @see #mySwitchTextAppearanceAttrib_textColorHint
           @see #mySwitchTextAppearanceAttrib_textColorLink
           @see #mySwitchTextAppearanceAttrib_textSize
           @see #mySwitchTextAppearanceAttrib_textStyle
           @see #mySwitchTextAppearanceAttrib_typeface
         */
        public static final int[] mySwitchTextAppearanceAttrib = {
            0x7f010013, 0x7f010014, 0x7f010015, 0x7f010016,
            0x7f010017, 0x7f010018, 0x7f010019
        };
        /**
          <p>
          @attr description
           Text color. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:textColor
        */
        public static final int mySwitchTextAppearanceAttrib_textColor = 0;
        /**
          <p>
          @attr description
           Color of the text selection highlight. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:textColorHighlight
        */
        public static final int mySwitchTextAppearanceAttrib_textColorHighlight = 4;
        /**
          <p>
          @attr description
           Color of the hint text. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:textColorHint
        */
        public static final int mySwitchTextAppearanceAttrib_textColorHint = 5;
        /**
          <p>
          @attr description
           Color of the links. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:textColorLink
        */
        public static final int mySwitchTextAppearanceAttrib_textColorLink = 6;
        /**
          <p>
          @attr description
           Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:textSize
        */
        public static final int mySwitchTextAppearanceAttrib_textSize = 1;
        /**
          <p>
          @attr description
           Style (bold, italic, bolditalic) for the text. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:textStyle
        */
        public static final int mySwitchTextAppearanceAttrib_textStyle = 2;
        /**
          <p>
          @attr description
           Typeface (normal, sans, serif, monospace) for the text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>sans</code></td><td>1</td><td></td></tr>
<tr><td><code>serif</code></td><td>2</td><td></td></tr>
<tr><td><code>monospace</code></td><td>3</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.example.qb_busclient:typeface
        */
        public static final int mySwitchTextAppearanceAttrib_typeface = 3;
    };
}
